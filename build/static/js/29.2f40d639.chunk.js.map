{"version":3,"file":"static/js/29.2f40d639.chunk.js","mappings":"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","sources":["components/shared-components/AvatarStatus/index.js","components/shared-components/EllipsisDropdown/index.js","views/app-views/orders/index.js","constants/DateConstant.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\nimport { Avatar } from 'antd';\r\n\r\nconst renderAvatar = props => {\r\n\treturn <Avatar {...props} className={`ant-avatar-${props.type}`}>{props.text}</Avatar>;\r\n}\r\n\r\nexport const AvatarStatus = props => {\r\n\tconst { name, suffix, subTitle, id, type, src, icon, size, shape, gap, text, onNameClick } = props\r\n\treturn (\r\n\t\t<div className=\"avatar-status d-flex align-items-center\">\r\n\t\t\t{renderAvatar({icon, src, type, size, shape, gap, text })}\r\n\t\t\t<div className=\"ml-2\">\r\n\t\t\t\t<div>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tonNameClick ? \r\n\t\t\t\t\t\t<div onClick={() => onNameClick({name, subTitle, src, id})} className=\"avatar-status-name clickable\">{name}</div> \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<div className=\"avatar-status-name\">{name}</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t\t<span>{suffix}</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"text-muted avatar-status-subtitle\">{subTitle}</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nAvatarStatus.propTypes = {\r\n\tname: PropTypes.string,\r\n\tsrc: PropTypes.string,\r\n\ttype: PropTypes.string,\r\n\tonNameClick: PropTypes.func\r\n}\r\n\r\n\r\nexport default AvatarStatus;\r\n","import React from 'react'\r\nimport { Dropdown, Menu } from 'antd';\r\nimport { EllipsisOutlined } from '@ant-design/icons';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst EllipsisDropdown = props => {\r\n\treturn (\r\n\t\t<Dropdown overlay={props.menu} placement={props.placement} trigger={['click']}>\r\n\t\t\t<div className=\"ellipsis-dropdown\">\r\n\t\t\t\t<EllipsisOutlined />\r\n\t\t\t</div>\r\n\t\t</Dropdown>\r\n\t)\r\n}\r\n\r\nEllipsisDropdown.propTypes = {\r\n\ttrigger: PropTypes.string,\r\n\tplacement: PropTypes.string\r\n}\r\n\r\nEllipsisDropdown.defaultProps = {\r\n\ttrigger: 'click',\r\n\tplacement: 'bottomRight',\r\n\tmenu: <Menu/>\r\n};\r\n\r\nexport default EllipsisDropdown\r\n","/* eslint-disable no-unused-vars */\r\nimport React, {useState} from 'react'\r\nimport { Card, Table, Select, Input, Button, Badge, Menu, Tag } from 'antd';\r\nimport OrderListData from \"assets/data/order-list.data.json\"\r\nimport { EyeOutlined, FileExcelOutlined, SearchOutlined, PlusCircleOutlined } from '@ant-design/icons';\r\nimport AvatarStatus from 'components/shared-components/AvatarStatus';\r\nimport EllipsisDropdown from 'components/shared-components/EllipsisDropdown';\r\nimport Flex from 'components/shared-components/Flex'\r\nimport NumberFormat from 'react-number-format';\r\nimport moment from 'moment'; \r\nimport { DATE_FORMAT_DD_MM_YYYY } from 'constants/DateConstant'\r\nimport utils from 'utils'\r\n\r\nconst { Option } = Select\r\n\r\nconst getPaymentStatus = status => {\r\n\tif(status === 'Paid') {\r\n\t\treturn 'success'\r\n\t}\r\n\tif(status === 'Pending') {\r\n\t\treturn 'warning'\r\n\t}\r\n\tif(status === 'Expired') {\r\n\t\treturn 'error'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst getShippingStatus = status => {\r\n\tif(status === 'Ready') {\r\n\t\treturn 'blue'\r\n\t}\r\n\tif(status === 'Shipped') {\r\n\t\treturn 'cyan'\r\n\t}\r\n\treturn ''\r\n}\r\n\r\nconst paymentStatusList = ['Paid', 'Pending', 'Expired']\r\n\r\nconst Orders = () => {\r\n\r\n\tconst [list, setList] = useState(OrderListData)\r\n\tconst [selectedRows, setSelectedRows] = useState([])\r\n\tconst [selectedRowKeys, setSelectedRowKeys] = useState([])\r\n\r\n\tconst handleShowStatus = value => {\r\n\t\tif(value !== 'All') {\r\n\t\t\tconst key = 'paymentStatus'\r\n\t\t\tconst data = utils.filterArray(OrderListData, key, value)\r\n\t\t\tsetList(data)\r\n\t\t} else {\r\n\t\t\tsetList(OrderListData)\r\n\t\t}\r\n\t}\r\n\r\n\tconst dropdownMenu = row => (\r\n\t\t<Menu>\r\n\t\t\t<Menu.Item>\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t<EyeOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">View Details</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Menu.Item>\r\n\t\t\t<Menu.Item>\r\n\t\t\t\t<Flex alignItems=\"center\">\r\n\t\t\t\t\t<PlusCircleOutlined />\r\n\t\t\t\t\t<span className=\"ml-2\">Add to remark</span>\r\n\t\t\t\t</Flex>\r\n\t\t\t</Menu.Item>\r\n\t\t</Menu>\r\n\t);\r\n\r\n\tconst tableColumns = [\r\n\t\t{\r\n\t\t\ttitle: 'ID',\r\n\t\t\tdataIndex: 'id'\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Product',\r\n\t\t\tdataIndex: 'name',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<div className=\"d-flex\">\r\n\t\t\t\t\t<AvatarStatus size={30} src={record.image} name={record.name}/>\r\n\t\t\t\t</div>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'name')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Date',\r\n\t\t\tdataIndex: 'date',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<span>{moment.unix(record.date).format(DATE_FORMAT_DD_MM_YYYY)}</span>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'date')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Order status',\r\n\t\t\tdataIndex: 'orderStatus',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<><Tag color={getShippingStatus(record.orderStatus)}>{record.orderStatus}</Tag></>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'orderStatus')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Payment status',\r\n\t\t\tdataIndex: 'paymentStatus',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<><Badge status={getPaymentStatus(record.paymentStatus)} /><span>{record.paymentStatus}</span></>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'paymentStatus')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: 'Total',\r\n\t\t\tdataIndex: 'amount',\r\n\t\t\trender: (_, record) => (\r\n\t\t\t\t<span className=\"font-weight-semibold\">\r\n\t\t\t\t\t<NumberFormat\r\n\t\t\t\t\t\tdisplayType={'text'} \r\n\t\t\t\t\t\tvalue={(Math.round(record.amount * 100) / 100).toFixed(2)} \r\n\t\t\t\t\t\tprefix={'$'} \r\n\t\t\t\t\t\tthousandSeparator={true} \r\n\t\t\t\t\t/>\r\n\t\t\t\t</span>\r\n\t\t\t),\r\n\t\t\tsorter: (a, b) => utils.antdTableSorter(a, b, 'amount')\r\n\t\t},\r\n\t\t{\r\n\t\t\ttitle: '',\r\n\t\t\tdataIndex: 'actions',\r\n\t\t\trender: (_, elm) => (\r\n\t\t\t\t<div className=\"text-right\">\r\n\t\t\t\t\t<EllipsisDropdown menu={dropdownMenu(elm)}/>\r\n\t\t\t\t</div>\r\n\t\t\t)\r\n\t\t}\r\n\t];\r\n\t\r\n\tconst rowSelection = {\r\n\t\tonChange: (key, rows) => {\r\n\t\t\tsetSelectedRows(rows)\r\n\t\t\tsetSelectedRowKeys(key)\r\n\t\t}\r\n\t};\r\n\r\n\tconst onSearch = e => {\r\n\t\tconst value = e.currentTarget.value\r\n\t\tconst searchArray = e.currentTarget.value? list : OrderListData\r\n\t\tconst data = utils.wildCardSearch(searchArray, value)\r\n\t\tsetList(data)\r\n\t\tsetSelectedRowKeys([])\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Flex alignItems=\"center\" justifyContent=\"between\" mobileFlex={false}>\r\n\t\t\t\t<Flex className=\"mb-1\" mobileFlex={false}>\r\n\t\t\t\t\t<div className=\"mr-md-3 mb-3\">\r\n\t\t\t\t\t\t<Input placeholder=\"Search\" prefix={<SearchOutlined />} onChange={e => onSearch(e)}/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"mb-3\">\r\n\t\t\t\t\t\t<Select \r\n\t\t\t\t\t\t\tdefaultValue=\"All\" \r\n\t\t\t\t\t\t\tclassName=\"w-100\" \r\n\t\t\t\t\t\t\tstyle={{ minWidth: 180 }} \r\n\t\t\t\t\t\t\tonChange={handleShowStatus} \r\n\t\t\t\t\t\t\tplaceholder=\"Status\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<Option value=\"All\">All payment </Option>\r\n\t\t\t\t\t\t\t{paymentStatusList.map(elm => <Option key={elm} value={elm}>{elm}</Option>)}\r\n\t\t\t\t\t\t</Select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Flex>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<Button type=\"primary\" icon={<FileExcelOutlined />} block>Export All</Button>\r\n\t\t\t\t</div>\r\n\t\t\t</Flex>\r\n\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t<Table \r\n\t\t\t\t\tcolumns={tableColumns} \r\n\t\t\t\t\tdataSource={list} \r\n\t\t\t\t\trowKey='id' \r\n\t\t\t\t\trowSelection={{\r\n\t\t\t\t\t\tselectedRowKeys: selectedRowKeys,\r\n\t\t\t\t\t\ttype: 'checkbox',\r\n\t\t\t\t\t\tpreserveSelectedRowKeys: false,\r\n\t\t\t\t\t\t...rowSelection,\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t)\r\n}\r\n\r\nexport default Orders\r\n","export const DATE_FORMAT_YYYYMMdd = \"YYYYMMdd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd = \"YYYY-MM-dd\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_Combined = \"YYYYMMddHHmm\";\r\nexport const DATE_FORMAT_YYYY_MM_dd_HH_mm = \"YYYY-MM-dd HH:mm\";\r\nexport const DATE_FORMAT_DD_MM_YYYY = \"DD-MM-YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_DOT = \"DD.MM.YYYY\";\r\nexport const DATE_FORMAT_mm_dd_YYYY_WITH_SLASH = \"MM/dd/YYYY\";\r\nexport const DATE_FORMAT_m_d_YYYY_WITH_SLASH = \"M/d/YYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_WITH_SLASH = \"DD/MM/YYYY\";\r\nexport const DATE_FORMAT_dd_MMM = \"ddMMM\";\r\nexport const DATE_FORMAT_dd_MM_yy = \"ddMMyy\";\r\nexport const DATE_FORMAT_dd_MMM_YYYY = \"ddMMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_COMBINED = \"DDMMYYYY\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss = \"YYYY-MM-dd'T'HH:mm:ss\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm_ss_sz = \"YYYY-MM-dd'T'HH:mm:ss.SSS\";\r\nexport const DATE_FORMAT_DD_MM_YYYY_HH_mm = \"dd-MM-YYYY HH:mm\";\r\nexport const DATE_FORMAT_HH_mm = \"HH:mm\";\r\nexport const DATE_FORMAT_YYYY_MM_DDTHH_mm_ssZ = \"YYYY-MM-DD'T'HH:mm:ssZ\"; "],"names":["renderAvatar","props","className","type","text","name","suffix","subTitle","id","src","icon","size","shape","gap","onNameClick","onClick","EllipsisDropdown","overlay","menu","placement","trigger","defaultProps","Option","Select","paymentStatusList","useState","OrderListData","list","setList","setSelectedRows","selectedRowKeys","setSelectedRowKeys","tableColumns","title","dataIndex","render","_","record","AvatarStatus","image","sorter","a","b","utils","moment","date","format","color","status","orderStatus","paymentStatus","displayType","value","Math","round","amount","toFixed","prefix","thousandSeparator","elm","Flex","alignItems","EyeOutlined","PlusCircleOutlined","rowSelection","onChange","key","rows","justifyContent","mobileFlex","placeholder","SearchOutlined","e","currentTarget","searchArray","data","onSearch","defaultValue","style","minWidth","map","FileExcelOutlined","block","columns","dataSource","rowKey","preserveSelectedRowKeys"],"sourceRoot":""}