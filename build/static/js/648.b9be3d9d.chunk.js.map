{"version":3,"file":"static/js/648.b9be3d9d.chunk.js","mappings":"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","sources":["views/app-views/planner/data/constants.js","views/app-views/planner/data/data.js","views/app-views/planner/PlannerObject.js","views/app-views/planner/PlannerRoom.js","views/app-views/planner/index.js"],"sourcesContent":["export const plannerObjectType = {\n    SOFA: 'sofa',\n    ARMCHAIR: 'armchair',\n    TABLE: 'table'\n}","import sofa1 from '../../../../assets/planner/sofa1.png'\nimport sofa2 from '../../../../assets/planner/sofa2.png'\nimport sofa3 from '../../../../assets/planner/sofa3.png'\nimport armchair1 from '../../../../assets/planner/armchair1.png'\nimport armchair2 from '../../../../assets/planner/armchair2.png'\nimport armchair3 from '../../../../assets/planner/armchair3.png'\nimport table1 from '../../../../assets/planner/table1.png'\nimport table2 from '../../../../assets/planner/table2.png'\nimport table3 from '../../../../assets/planner/table3.png'\nimport { plannerObjectType } from './constants'\n\nexport const plannerObjects = [\n    {\n        id: 1,\n        top: 0,\n        left: 0,\n        width: 170,\n        height: 100,\n        type: plannerObjectType.SOFA,\n        img: sofa1\n    },\n    {\n        id: 2,\n        top: 0,\n        left: 0,\n        width: 185,\n        height: 94,\n        type: plannerObjectType.SOFA,\n        img: sofa2\n    },\n    {\n        id: 3,\n        top: 0,\n        left: 0,\n        width: 154,\n        height: 88,\n        type: plannerObjectType.SOFA,\n        img: sofa3\n    },\n    {\n        id: 4,\n        top: 0,\n        left: 0,\n        width: 82,\n        height: 83,\n        type: plannerObjectType.ARMCHAIR,\n        img: armchair1\n    },\n    {\n        id: 5,\n        top: 0,\n        left: 0,\n        width: 78,\n        height: 63,\n        type: plannerObjectType.ARMCHAIR,\n        img: armchair2\n    },\n    {\n        id: 6,\n        top: 0,\n        left: 0,\n        width: 76,\n        height: 72,\n        type: plannerObjectType.ARMCHAIR,\n        img: armchair3\n    },\n    {\n        id: 7,\n        top: 0,\n        left: 0,\n        width: 93,\n        height: 52,\n        type: plannerObjectType.TABLE,\n        img: table1\n    },\n    {\n        id: 8,\n        top: 0,\n        left: 0,\n        width: 120,\n        height: 120,\n        type: plannerObjectType.TABLE,\n        img: table2\n    },\n    {\n        id: 9,\n        top: 0,\n        left: 0,\n        width: 130,\n        height: 58,\n        type: plannerObjectType.TABLE,\n        img: table3\n    },\n]","import React from 'react'\nimport { useDrag } from 'react-dnd'\n\nconst PlannerObject = ({ id, img, top, left, isSet }) => {\n  const styleObject = {\n    position: 'absolute',\n    top: `${top}px`,\n    left: `${left}px`,\n  };\n\n  const [, drag] = useDrag(() => ({\n    type: 'planner-object',\n    item: { id, isSet },\n    collect: (monitor) => ({\n      isDragging: !!monitor.isDragging()\n    }),\n  }));\n\n  return (\n      <img style={styleObject} ref={drag} src={img} alt=\"\" />\n  )\n}\n\nexport default PlannerObject","import React, { useRef } from 'react'\nimport { useDrop } from 'react-dnd'\nimport { findDOMNode } from 'react-dom'\nimport roomImage from '../../../assets/planner/floor.png'\nimport { plannerObjects } from './data/data'\nimport PlannerObject from './PlannerObject'\n\nconst PlannerRoom = ({ room, setRoom }) => {\n    const styleRoom = {\n        position: 'relative',\n        width: '520px',\n        height: '520px'\n    }\n\n    const image = useRef()\n\n    const [, drop] = useDrop(() => ({\n        accept: 'planner-object',\n        drop: (item, monitor) => {\n            const { left, top } = findDOMNode(image.current).getBoundingClientRect();\n            const { x, y } = monitor.getSourceClientOffset();\n            const delta = monitor.getDifferenceFromInitialOffset();\n            const itemTop = y - top;\n            const itemLeft = x - left;\n\n            if (!item.isSet) {\n                addObjectToRoom(item.id, itemTop, itemLeft)\n            } else {\n                moveObjectInRoom(itemTop, itemLeft, delta)\n            }\n        }\n    }), [room])\n\n\n    const addObjectToRoom = (id, top, left) => {\n        const [plannerObject] = plannerObjects.filter((item) => item.id === id);\n\n        setRoom((objectList) => [...objectList, { ...plannerObject, top, left, isSet: true }])\n    }\n\n    const moveObjectInRoom = (top, left, delta) => {\n        const index = room.findIndex((item) => (\n            Math.abs(item.top + item.left) === ((top - delta.y) + (left - delta.x))\n        ))\n\n        const updateRoom = room.map((obj, i) => {\n            if (i === index) {\n                const top = Math.abs(obj.top + delta.y);\n                const left = Math.abs(obj.left + delta.x);\n                return { ...obj, top, left }\n            }\n            return obj\n        })\n\n        setRoom([...updateRoom])\n    }\n\n    return (\n        <div style={{display: 'flex', justifyContent: 'center'}}>\n            <div style={styleRoom} ref={drop}>\n                <img \n                    ref={image} \n                    style={{\n                        'position': 'absolute',\n                        'zIndex': '-1'\n                    }} \n                    src={roomImage} \n                    alt=\"room\" \n                />\n                {room.map((obj, index) => (\n                    <PlannerObject \n                        key={index} \n                        id={obj.id} \n                        img={obj.img} \n                        top={obj.top} \n                        left={obj.left} \n                        isSet={obj.isSet}\n                    />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default PlannerRoom","import { Button, Card, Col, List, message, Row, Space, Tabs, Upload } from 'antd'\nimport { ROW_GUTTER } from 'constants/ThemeConstant';\nimport React, { useState } from 'react'\nimport { DndProvider } from 'react-dnd';\nimport { HTML5Backend } from 'react-dnd-html5-backend';\nimport { plannerObjectType } from './data/constants';\nimport { plannerObjects } from './data/data';\nimport PlannerObject from './PlannerObject';\nimport PlannerRoom from './PlannerRoom';\n\n\nconst Planner = () => {\n\tconst [room, setRoom] = useState([])\n\n\tconst { TabPane } = Tabs;\n\n\tconst armchairs = plannerObjects.filter((item) => item.type === plannerObjectType.ARMCHAIR)\n\tconst sofas = plannerObjects.filter((item) => item.type === plannerObjectType.SOFA)\n\tconst tables = plannerObjects.filter((item) => item.type === plannerObjectType.TABLE)\n\n\tconst onSaveArrangement = () => {\n\t\tconst string = JSON.stringify(room)\n\t\tconst blob = new Blob([string], {type: \"text/plain\"})\n\t\tconst link = document.createElement(\"a\");\n\t\tlink.setAttribute(\"href\", URL.createObjectURL(blob));\n\t\tlink.setAttribute(\"download\", \"arrangement.txt\");\n\t\tlink.click();\n\t}\n\n\tconst uploadProps = {\n\t\tname: 'file',\n\t\tcustomRequest({ onSuccess }) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tonSuccess(\"ok\");\n\t\t\t}, 200);\n\t\t},\n\t\tonChange(info) {\n\t\t\tif (info.file.status === 'done') {\n\t\t\t\tmessage.success(`${info.file.name} file uploaded successfully`);\n\t\t\t} else if (info.file.status === 'error') {\n\t\t\t\tmessage.error(`${info.file.name} file upload failed.`);\n\t\t\t}\n\n\t\t\tconst reader = new FileReader();\n\t\t\treader.readAsText(info.file.originFileObj)\n\t\t\treader.onload = (event) => {\n\t\t\t\tsetRoom([...JSON.parse(event.target.result)])\n\t\t\t}\n\t\t},\n\t\t\n\t};\n\n\treturn (\n\t\t<DndProvider backend={HTML5Backend}>\n\t\t\t<Row gutter={ROW_GUTTER} wrap={true} justify={'center'}>\n\t\t\t\t<Col xs={24} sm={24} md={16} lg={16} xl={12} xxl={12}>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Tabs defaultActiveKey=\"1\">\n\t\t\t\t\t\t\t<TabPane tab=\"Кресла\" key=\"1\">\n\t\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\t\titemLayout=\"vertical\"\n\t\t\t\t\t\t\t\t\tgrid={{gutter: ROW_GUTTER}}\n\t\t\t\t\t\t\t\t\tdataSource={armchairs}\n\t\t\t\t\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t\t<div style={{position: 'relative', width: `${item.width}px`, height: `${item.height}px`}}>\n\t\t\t\t\t\t\t\t\t\t\t<PlannerObject id={item.id} img={item.img} top={0} left={0} />\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t\t<TabPane tab=\"Диваны\" key=\"2\">\n\t\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\t\titemLayout=\"vertical\"\n\t\t\t\t\t\t\t\t\tgrid={{gutter: ROW_GUTTER}}\n\t\t\t\t\t\t\t\t\tdataSource={sofas}\n\t\t\t\t\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t\t<div style={{position: 'relative', width: `${item.width}px`, height: `${item.height}px`}}>\n\t\t\t\t\t\t\t\t\t\t\t<PlannerObject id={item.id} img={item.img} top={0} left={0}/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t\t<TabPane tab=\"Столы\" key=\"3\">\n\t\t\t\t\t\t\t\t<List\n\t\t\t\t\t\t\t\t\titemLayout=\"vertical\"\n\t\t\t\t\t\t\t\t\tgrid={{gutter: ROW_GUTTER}}\n\t\t\t\t\t\t\t\t\tdataSource={tables}\n\t\t\t\t\t\t\t\t\trenderItem={(item) => (\n\t\t\t\t\t\t\t\t\t<List.Item>\n\t\t\t\t\t\t\t\t\t\t<div style={{position: 'relative', width: `${item.width}px`, height: `${item.height}px`}}>\n\t\t\t\t\t\t\t\t\t\t\t<PlannerObject id={item.id} img={item.img} top={0} left={0}/>\n\t\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t</List.Item>\n\t\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t\t/>\t\n\t\t\t\t\t\t\t</TabPane>\n\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t</Card>\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Space size={50}>\n\t\t\t\t\t\t\t<Button onClick={onSaveArrangement} type='primary'>\n\t\t\t\t\t\t\t\tСохранить\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Upload {...uploadProps} showUploadList={false}>\n\t\t\t\t\t\t\t\t<Button type='primary' ghost>\n\t\t\t\t\t\t\t\t\tЗагрузить\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t</Upload>\n\t\t\t\t\t\t</Space>\n\t\t\t\t\t</Card>\n\t\t\t\t</Col>\n\t\t\t\t<Col xs={24} sm={24} md={24} lg={24} xl={12} xxl={12}>\n\t\t\t\t\t<PlannerRoom room={room} setRoom={setRoom} />\n\t\t\t\t</Col>\n\t\t\t</Row>\n\t\t</DndProvider>\n\t)\n}\n\nexport default Planner"],"names":["plannerObjectType","plannerObjects","id","top","left","width","height","type","img","sofa1","sofa2","sofa3","armchair1","table1","table2","table3","isSet","styleObject","position","useDrag","item","collect","monitor","isDragging","drag","style","ref","src","alt","room","setRoom","image","useRef","useDrop","accept","drop","findDOMNode","current","getBoundingClientRect","getSourceClientOffset","x","y","delta","getDifferenceFromInitialOffset","itemTop","itemLeft","moveObjectInRoom","addObjectToRoom","filter","plannerObject","objectList","index","findIndex","Math","abs","updateRoom","map","obj","i","display","justifyContent","roomImage","useState","TabPane","Tabs","armchairs","sofas","tables","uploadProps","name","customRequest","onSuccess","setTimeout","onChange","info","file","status","message","reader","FileReader","readAsText","originFileObj","onload","event","JSON","parse","target","result","DndProvider","backend","HTML5Backend","gutter","ROW_GUTTER","wrap","justify","xs","sm","md","lg","xl","xxl","defaultActiveKey","tab","itemLayout","grid","dataSource","renderItem","size","onClick","string","stringify","blob","Blob","link","document","createElement","setAttribute","URL","createObjectURL","click","showUploadList","ghost"],"sourceRoot":""}