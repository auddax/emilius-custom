{"version":3,"file":"static/js/532.da1b3da0.chunk.js","mappings":"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","sources":["views/auth-views/authentication/register-1/index.js","views/auth-views/components/RegisterForm.js"],"sourcesContent":["import React from 'react'\r\nimport RegisterForm from '../../components/RegisterForm'\r\nimport { Card, Row, Col } from \"antd\";\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst backgroundStyle = {\r\n\tbackgroundImage: 'url(/img/others/img-17.jpg)',\r\n\tbackgroundRepeat: 'no-repeat',\r\n\tbackgroundSize: 'cover'\r\n}\r\n\r\nconst RegisterOne = props => {\r\n\tconst theme = useSelector(state => state.theme.currentTheme)\r\n\treturn (\r\n\t\t<div className=\"h-100\" style={backgroundStyle}>\r\n\t\t\t<div className=\"container d-flex flex-column justify-content-center h-100\">\r\n\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t<Col xs={20} sm={20} md={20} lg={7}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<div className=\"my-2\">\r\n\t\t\t\t\t\t\t\t<div className=\"text-center\">\r\n\t\t\t\t\t\t\t\t<img className=\"img-fluid\" src={`/img/${theme === 'light' ? 'logo.png': 'logo-white.png'}`} alt=\"\" />\r\n\t\t\t\t\t\t\t\t\t<p className=\"text-muted\">Create a new account:</p>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t<Row justify=\"center\">\r\n\t\t\t\t\t\t\t\t\t<Col xs={24} sm={24} md={20} lg={20}>\r\n\t\t\t\t\t\t\t\t\t\t<RegisterForm {...props}/>\r\n\t\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default RegisterOne\r\n","import React, { useEffect } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { LockOutlined, MailOutlined } from '@ant-design/icons';\r\nimport { Button, Form, Input, Alert } from \"antd\";\r\nimport { signUp, showAuthMessage, showLoading, hideAuthMessage } from 'redux/actions/Auth';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { motion } from \"framer-motion\"\r\n\r\nconst rules = {\r\n\temail: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please input your email address'\r\n\t\t},\r\n\t\t{ \r\n\t\t\ttype: 'email',\r\n\t\t\tmessage: 'Please enter a validate email!'\r\n\t\t}\r\n\t],\r\n\tpassword: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please input your password'\r\n\t\t}\r\n\t],\r\n\tconfirm: [\r\n\t\t{ \r\n\t\t\trequired: true,\r\n\t\t\tmessage: 'Please confirm your password!'\r\n\t\t},\r\n\t\t({ getFieldValue }) => ({\r\n\t\t\tvalidator(rule, value) {\r\n\t\t\t\tif (!value || getFieldValue('password') === value) {\r\n\t\t\t\t\treturn Promise.resolve();\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise.reject('Passwords do not match!');\r\n\t\t\t},\r\n\t\t})\r\n\t]\r\n}\r\n\r\nexport const RegisterForm = (props) => {\r\n\r\n\tconst { signUp, showLoading, token, loading, redirect, message, showMessage, hideAuthMessage, allowRedirect } = props\r\n\tconst [form] = Form.useForm();\r\n\tlet history = useHistory();\r\n\r\n\tconst onSignUp = () => {\r\n    \tform.validateFields().then(values => {\r\n\t\t\tshowLoading()\r\n\t\t\tsignUp(values)\r\n\t\t}).catch(info => {\r\n\t\t\tconsole.log('Validate Failed:', info);\r\n\t\t});\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tif (token !== null && allowRedirect) {\r\n\t\t\thistory.push(redirect)\r\n\t\t}\r\n\t\tif(showMessage) {\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\thideAuthMessage();\r\n\t\t\t}, 3000);\r\n\t\t}\r\n\t});\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<motion.div \r\n\t\t\t\tinitial={{ opacity: 0, marginBottom: 0 }} \r\n\t\t\t\tanimate={{ \r\n\t\t\t\t\topacity: showMessage ? 1 : 0,\r\n\t\t\t\t\tmarginBottom: showMessage ? 20 : 0 \r\n\t\t\t\t}}> \r\n\t\t\t\t<Alert type=\"error\" showIcon message={message}></Alert>\r\n\t\t\t</motion.div>\r\n\t\t\t<Form form={form} layout=\"vertical\" name=\"register-form\" onFinish={onSignUp}>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"email\" \r\n\t\t\t\t\tlabel=\"Email\" \r\n\t\t\t\t\trules={rules.email}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input prefix={<MailOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"password\" \r\n\t\t\t\t\tlabel=\"Password\" \r\n\t\t\t\t\trules={rules.password}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item \r\n\t\t\t\t\tname=\"confirm\" \r\n\t\t\t\t\tlabel=\"ConfirmPassword\" \r\n\t\t\t\t\trules={rules.confirm}\r\n\t\t\t\t\thasFeedback\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input.Password prefix={<LockOutlined className=\"text-primary\" />}/>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t\t<Form.Item>\r\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" block loading={loading}>\r\n\t\t\t\t\t\tSign Up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</Form.Item>\r\n\t\t\t</Form>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nconst mapStateToProps = ({auth}) => {\r\n\tconst { loading, message, showMessage, token, redirect } = auth;\r\n  return { loading, message, showMessage, token, redirect }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n\tsignUp,\r\n\tshowAuthMessage,\r\n\thideAuthMessage,\r\n\tshowLoading\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(RegisterForm)\r\n"],"names":["backgroundStyle","backgroundImage","backgroundRepeat","backgroundSize","props","theme","useSelector","state","currentTheme","className","style","justify","xs","sm","md","lg","src","alt","rules","email","required","message","type","password","confirm","getFieldValue","validator","rule","value","Promise","reject","resolve","mapDispatchToProps","signUp","showAuthMessage","hideAuthMessage","showLoading","connect","auth","loading","showMessage","token","redirect","allowRedirect","Form","form","history","useHistory","useEffect","push","setTimeout","initial","opacity","marginBottom","animate","showIcon","layout","name","onFinish","validateFields","then","values","catch","info","console","log","label","hasFeedback","prefix","htmlType","block"],"sourceRoot":""}